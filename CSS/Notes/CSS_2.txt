CSS PROPERTIES
===============

I) Background Properties
------------------------
a) background-color: "color_name | hex_color | rgb() | rgba()"
  
b) background-image: url(image path)

c) background-repeat: repeat | repeat-x | repeat-y | no-repeat;

4) background-attachment: scroll | fixed

 scroll - the background scrolls along with the element. This is default

 fixed - the background is fixed

5) background-size: auto | cover | contain

6) background-position: horizontal vertical
- to define the initial position of the background image. By default, the background image is placed on the top-left of the webpage. 

Values of background-position:

1) left top
2) left center
3) left bottom
4) right top
5) right center
6) right bottom
7) center top
8) center center
9) center bottom

background-position: center bottom;
	OR
background-position: 25% 10%;
	OR
background-position: 250px 125px;

Shorthand property for background
---------------------------------
<style>
body
{
 background: red url('images/p1.jpg') no-repeat center top fixed;
 color: yellow;
}
</style>


background-image:linear-gradient:(red, yellow);

background-image:linear-gradient(to right, red,yellow);

background:linear-gradient(to top, red,yellow,purple);

background:linear-gradient(45deg,red, yellow, green);  



II) Border Properties
---------------------
- used to provide the style, color and size of the border 

a) border-style: none | solid | dashed | dotted | double | groove | ridge | inset | outset


b) border-width:  "thin" | "medium" | "thick" | <num>px

c) border-color: color_name | hex_value |rgb_function | transparent

Border Shorthand Property:
--------------------------
   border: <width> <style> <color>

Eg:   border: 5px solid rgb(0,255,0);


to apply border width for each border:

  border-width: <top> <right> <bottom> <left>

Eg: border-width: 2px 10px 2px 10px;
	OR
 border-width: 2px 10px; 
      - top and bottom border width will be 2px and that of right and left will be 10px

to apply border color for each border:
 border-color: green yellow green yellow
	OR
 border-color: green yellow;
  //top and bottom border color will be green and left and right border color will be yellow

border-top-style: solid
border-bottom-color: red
border-left-width: 5px
etc

Short-hand Property:
 border-top: solid 5px red; 
 border-bottom:double 5px green 


border-radius: 15px;

to apply different border radius for each corner:
 border-top-left-radius: 10px;  
 border-top-right-radius: 180px;    
 border-bottom-right-radius: 10px;
 border-bottom-left-radius: 180px  






III) Font Properties
====================
Using  CSS font property we can change the text size, color, style etc. 

a) color: color_name | hex_value | rgb() | rgba() 

b) font-family: Serif | Sans-serif | Monospace | font_name

c) font-size: xx-small | x-small | small | medium | large | x-large | xx-large | smaller | larger | px | % value

d) font-style: normal | italic | oblique 

e) font-variant: normal | small-caps

f) font-weight: normal | bold | bolder | lighter | number (100, 200..... upto 900)
- to specify "how bold a font is" 

"normal" value maps to 400 and 
the value "bold" maps to 700

 font-weight: bold;
	OR
 font-weight: 700;

To work with google fonts: 
 > visit fonts.google.com
 > Select the font to integrate 
 > copy the <link> tag and place it in <head>
 > use that font name in CSS


IV) Text Properties
-------------------
a) color: color_name | hex_value | rgb() | rgba() etc
   
b) letter-spacing: normal | length in px

   letter-spacing: 20px;

c) text-align:  left | right | center |  justify etc

d) text-decoration:  none | underline | overline | line-through | blink
 
e) text-indent:  length in px | percentage
- to indent the first line of text in a web page
  text-indent: 20px;
  	OR
  text-indent: 40%

f) text-transform: none | capitalize | lowercase | uppercase
  
   text-transform: uppercase;

g) word-spacing: normal | length in px

h) direction: ltr|rtl

i) text-shadow: h-shadow v-shadow blur-radius color
etc


h1{
 text-shadow: 2px 2px red
}

h1 {
  text-shadow: 2px 2px 8px #f00;
}

h1 {
  color: white;
  text-shadow: 0px 0px 8px black;
}


<html>
<head>
<style>
h1 {
  text-shadow: 0 0 3px #FF0000;
}
</style>
</head>
<body>
<h1>Text-shadow with red neon glow</h1>
</body>
</html>


Example : Text-shadow with red and blue neon glow
<!DOCTYPE html>
<html>
<head>
<style>
h1 {
  text-shadow: 0 0 3px #FF0000, 0 0 5px #0000FF;
}
</style>
</head>
<body>

<h1>Text-shadow with red and blue neon glow</h1>
</body>
</html>



V) Line Height
==============
- to define the minimal height of line boxes within the element. 

 line-height: normal | number | length in px |  %  

% - specifies the line height in percent of the current font.

The default line height in most browsers is about 110% to 120%


Example:
#mypara
{
 ....;
 line-height: 2 | 25px | 200%
}


VI) Margin Properties
=====================
- used to define the space around elements. 
- it is completely transparent and doesn't have any background color.

margin
margin-left
margin-right
margin-bottom
margin-top

 the values can be "length | percentage | auto"

Shorthand Property
------------------
1) margin: 50px 100px 150px 200px;
	     T    R     B     L	



It identifies that:
 top margin - 50px
 right margin - 100px
 bottom margin - 150px
 left margin - 200px

2) margin: 50px 100px 150px;

It identifies that:
 top margin - 50px
 left and right margin - 100px
 bottom margin - 150px

3) margin: 50px 100px;

 top and bottom margin - 50px
 left and right margin - 100px

4) margin: 50px;


#region{
 background-color:yellow;
 width: 200px;
 height: 200px;
 border-radius: 50%;
 margin: 50px;
}


To make a <div> tag center aligned
 div{
   margin:auto;
   width:200px;
   height:150px;
   border:2px solid black;
 }
---------------------------------
Working with awesome font:
-------------------------
> https://fontawesome.com/
> Download "Free for Web"
> fontawesome-free-5.10.2-web.zip
> extract it
> place that folder in our workspace
> to view different icons : https://fontawesome.com/icons


---------------------------------


VII) Display Properties
=======================
CSS display specifies how the element is displayed. 

Every element on the webpage is a rectangular box and the CSS property defines the behavior of that rectangular box. 

 display: block | inline | inline-block | none;


1) inline - takes the required width only. 

2) inline-block - this is similar to inline element but the difference is that we are able to set the width and height. 

3) block - this value takes the full available width by default. They make a line break before and after them. 

4) none - this value totally removes the element display from the page. 


"display" property is used to make an inline element as block element:

Eg: <a> tag is an inline element

<style>
 a{
  display: block;
 }
</style>
<body>
 <a href="">Home</a>
 <a href="">About Us</a>
 <a href="">Contact Us</a>
</body>



- making a block element as inline:
 <li> is a block level element

<style>
 li{
  display: inline
 }
</style>
<body>
 <ul>
  <li><a href="">Home</a></li>
  <li><a href="">About Us</a></li>
  <li><a href="">Contact Us</a></li>
 </ul>
</body>


To make an <h1> invisible:

<html>  
<body>  
 <h1>This heading is visible.</h1>  
 <h1 style="display:none">This is not visible</h1> 
 <p>A Paragraph</p> 
 <h1>Another Heading</h1> 
</body>  
</html>  



To hide an element in a web page we can use the following css properties
 1) display: none
 2) visibility: hidden

Difference:
-----------
visibility: hidden;  -takes the area in the web page, affects the layout

display:none; - will not take the area in the web page



Example:
<html>
<head>
<style>
    h1.hide1{
        display:none;
    } 
    h1.hide2{
        visibility:hidden;
    }      
</style>    
</head>
<body>
 <h1>Heading-1</h1>    
 <h1 class="hide1">Heading-2</h1>    
 <h1>Heading-3</h1>    
 <h1 class="hide2">Heading-4</h1>    
 <h1>Heading-5</h1>        
</body>    
</html>


Other CSS display values
------------------------
inline-table 	It displays an element as an inline-level table.
list-Item 		It makes the element behave like a <li> element.
table 		It makes the element behave like a <table> element.
table-caption 	It makes the element behave like a <caption> element.
table-column-group 	It makes the element behave like a <colgroup> element.
table-header-group 	It makes the element behave like a <thead> element.
table-footer-group 	It makes the element behave like a <tfoot> element.
table-row-group 	It makes the element behave like a <tbody> element.
table-cell 		It makes the element behave like a <td> element.
table-row 	It makes the element behave like a <tr> element.
table-column 	It makes the element behave like a <col> element.


VIII) overflow Property
-----------------------
- The overflow property controls what happens to content that breaks outside of its boundary

 overflow: visible | hidden | scroll | auto;

visible - content is not clipped when it proceeds outside its box. This is the default value of the property	

hidden 	- overflowing content will be hidden.

scroll 	- similar to hidden except users will be able to scroll through the hidden content

auto 	- if the content proceeds outside its box then a scrollbar is provided to the user to read the missing content








<p style="background-image: url(../../images/img_nat.png); height: 130px; width: 200px; overflow: scroll; background-attachment:fixed; color: white;">This element represent background-attachment property. It means image does not moved only fixed attached a image. background attachment possible value fixed or scroll. you can use this value and display results.This example is Background attachment image is fixed means image does not moved only fixed attached a image. background attachment possible value fixed or scroll. you can use this value and display results.</p>


 overflow-x and overflow-y

It's also possible to manipulate the overflow of content horizontally or vertically with the overflow-x and overflow-y properties.


mystyle.css

div {
  width: 400px;
  height: 200px;
  border: 5px solid #E18728;
  margin-bottom: .5em;
  background: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/652/codepen.png); 
  background-repeat: no-repeat;
}

#pixels { background-position: 350px 0; }

#percentages { background-position: 100% 0; }

#keywords { background-position: top right; }

/* styling for Pen, unrelated to background-position */
p { 
  margin-top: 50px;
  padding: 0 1em;
}

Test.html

<div id="pixels">
  <p><code>background-position: 350px 0;</code></p>
</div>

<div id="percentages">
  <p><code>background-position: 100% 0;</code></p>
</div>

<div id="keywords">
  <p><code>background-position: top right;</code></p>
</div>




